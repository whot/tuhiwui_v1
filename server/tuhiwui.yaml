openapi: 3.0.0
servers:
  - url: 'http://localhost:8080/v2'
info:
  version: 0.0.1
  title: TuhiWUI
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: device
    description: Everything about your devices

paths:
  /devices:
    get:
      tags:
        - device
      summary: list existing devices
      description: ''
      operationId: listDevices
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  '/device/{deviceId}':
    get:
      tags:
        - device
      summary: Find device by ID
      description: returns a single device
      operationId: getDeviceById
      parameters:
        - name: deviceId
          in: path
          description: ID of device to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Device'
        '400':
          description: Invalid ID supplied
        '404':
          description: Device not found
    post:
      tags:
        - device
      summary: starts listening on a device
      description: ''
      operationId: toggleListen
      parameters:
        - name: deviceId
          in: path
          description: ID of device to start listening on
          required: true
          schema:
            type: string
        - name: listen
          in: query
          description: boolean to toggle listen on or off
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /search:
    get:
      tags:
        - device
      summary: return a list of unregistered devices
      description: |
        Returns a list of unregistered devices (if any). Calling this function
        also turns searching on and it may be a while until the device shows up.
        Keep calling this function, just in case the device shows up delayed.
        The server will turn search functionality off after a timeout.
      operationId: search
      parameters: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
  '/register/{deviceId}':
    post:
      tags:
        - device
      summary: register a previously unregistered device
      description: ''
      parameters:
        - name: deviceId
          in: path
          description: ID of device to return
          required: true
          schema:
            type: string
      responses:
        # FIXME: this would need some more complex response
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: device not found or isn't listening
        '405':
          description: Invalid input

components:
  requestBodies:
    Device:
      description: A device
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Device'
    ApiResponse:
      description: A device
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResponse'
  schemas:
    Device:
      title: Device
      description: A device
      type: object
      required:
        - id
      properties:
        id:
          type: string
        name:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        battery:
          type: integer
          format: int32
        batteryState:
          type: string
          enum:
            - unknown
            - charging
            - discharging
        drawings:
          type: array
          items:
            $ref: '#/components/schemas/Drawing'
        isListening:
          type: boolean
          default: false
        isInLiveMode:
          type: boolean
          default: false
    Drawing:
      title: Drawing
      description: A drawing
      type: object
      properties:
        version:
          type: integer
          format: uint32
        deviceName:
          type: string
        dimensions:
          type: array
          items:
            type: integer
            format: uint32
        timestamp:
          type: integer
          format: uint64
        strokes:
          type: array
          items:
            $ref: '#/components/schemas/Stroke'
    Stroke:
      title: Stroke
      description: A stroke in a drawing
      type: object
      properties:
        points:
          type: array
          items:
            $ref: '#/components/schemas/Point'
    Point:
      title: Point
      description: A point in a stroke
      type: object
      properties:
        timeOffset:
          type: integer
          format: uint32
        position:
          type: array
          items:
            type: integer
            format: uint32
        pressure:
          type: integer
          format: uint32
    ApiResponse:
      title: An uploaded response
      description: Describes the result of an operation 
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  # vim: set expandtab tabstop=4 shiftwidth=2: */
